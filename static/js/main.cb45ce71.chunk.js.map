{"version":3,"sources":["components/ListItems.js","actions/todoAction.js","actionType.js","reducers/todoReducer.js","reducers/rootReducer.js","store.js","components/InputComponent.js","App.js","index.js"],"names":["connect","state","todo","updateItemAction","type","payload","deleteItemAction","todoKey","props","items","listItems","map","item","className","key","id","value","text","onChange","e","target","onClick","icon","duration","easing","initialState","currentItem","combineReducers","filter","createStore","rootReducer","handleOnSubmitAction","data","useState","setCurrentItem","handleOnClick","a","trim","placeholder","Date","now","library","add","faTrash","App","store","align","ReactDOM","render","document","getElementById"],"mappings":"oSAyCeA,eAHS,SAACC,GAAD,MAAU,CAC9BC,KAAOD,EAAMC,QAEwB,CAACC,iBCxBV,SAACD,GAC7B,MAAO,CACHE,KCjBmB,cDkBnBC,QAAUH,IDqB2CI,iBC/B7B,SAACC,GAC7B,MAAO,CACHH,KCXmB,cDYnBC,QAAUE,KD4BHP,EAlCG,SAACQ,GAAW,IAEpBC,EADSD,EAARN,KACYO,MACZH,EAAuCE,EAAvCF,iBAAmBH,EAAoBK,EAApBL,iBAKpBO,EAAYD,EAAME,KAAI,SAAAC,GACxB,OAAO,yBAAKC,UAAU,OAAOC,IAAKF,EAAKE,KACnC,2BACI,2BAAOV,KAAK,OAAOW,GAAIH,EAAKE,IAAKE,MAAOJ,EAAKK,KAAMC,SAAU,SAACC,GAC1DhB,EAAiB,CAACc,KAAOE,EAAEC,OAAOJ,MAAOF,IAAMF,EAAKE,SAExD,8BAER,kBAAC,IAAD,CAAiBD,UAAU,UAAUQ,QAAS,WAC1Cf,EAAiBM,EAAKE,MACvBQ,KAAK,gBAKZ,OAAO,6BACH,kBAAC,IAAD,CAAUC,SAAU,IAAKC,OAAO,eAC3Bd,O,qCGzBPe,EAAe,CACjBhB,MAAM,GACNiB,YAAY,CACRT,KAAK,GACLH,IAAI,KCRGa,cAAgB,CAC3BzB,KDYW,WAA4C,IAA3CD,EAA0C,uDAAlCwB,EAAkC,yCAAlBpB,EAAkB,EAAlBA,QAAUD,EAAQ,EAARA,KAC9C,OAAQA,GACJ,IDlBoB,eCkBA,OAAO,2BACpBH,GADa,IAEhBQ,MAAK,sBAAOR,EAAMQ,OAAb,CAAqBJ,MAE9B,IDpBmB,cCoBA,OAAO,2BACnBJ,GADY,IAEfQ,MAAK,sBAAOR,EAAMQ,MAAMmB,QAAO,SAAAhB,GAAI,OAAEA,EAAKE,KAAKT,EAAQS,QAAlD,CAAyDT,MAElE,IDzBmB,cCyBA,OAAO,2BACnBJ,GADY,IAEfQ,MAAOR,EAAMQ,MAAMmB,QAAO,SAAAhB,GAAI,OAAEA,EAAKE,KAAKT,OAE9C,QAAU,OAAOoB,MEzBVI,cACXC,EAHiB,I,iCCuCN9B,eAHQ,SAACC,GAAD,MAAU,CAC7BC,KAAOD,EAAMC,QAEwB,CAAC6B,qBLvCN,SAACC,GACjC,MAAQ,CACJ5B,KCLoB,eDMpBC,QAAU2B,KKoCHhC,EArCO,SAACQ,GACJA,EAARN,KADqB,IAErB6B,EAAwBvB,EAAxBuB,qBAFoB,EAGYE,mBAAS,CAC5ChB,KAAO,GACPH,IAAM,KALiB,mBAGpBY,EAHoB,KAGNQ,EAHM,KAerBC,EAAa,uCAAG,sBAAAC,EAAA,sDACU,IAAzBV,EAAYT,KAAKoB,SAChBN,EAAqBL,GACrBQ,EAAe,CACXjB,KAAO,GACPH,IAAM,MALI,2CAAH,qDASnB,OACI,6BACI,yBAAKC,GAAG,cACJ,2BAAOX,KAAK,OAAOkC,YAAY,aAAatB,MAAQU,EAAYT,KAAMC,SAAU,SAACC,GAAD,OAnBjEH,EAmBwFG,EAAEC,OAAOJ,WAlBxHkB,EAAe,CACXpB,IAAMyB,KAAKC,MACXvB,KAAOD,IAHW,IAACA,KAoBf,4BAAQK,QAASc,EAAe/B,KAAK,UAArC,YCxBhBqC,IAAQC,IAAIC,KAEZ,IAiBeC,EAjBJ,WACT,OACI,kBAAC,IAAD,CAAUC,MAAOA,GACf,yBAAKhC,UAAU,OACb,gCACI,wBAAIiC,MAAM,UAAV,gBACF,kBAAC,EAAD,MACA,kBAAC,EAAD,UCZZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cb45ce71.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport FlipMove from 'react-flip-move';\r\nimport {connect} from \"react-redux\";\r\nimport {deleteItemAction, updateItemAction} from \"../actions/todoAction\";\r\n\r\nconst ListItems = (props) => {\r\n    const {todo} = props;\r\n    const items = todo.items;\r\n    const {deleteItemAction , updateItemAction} = props;\r\n\r\n\r\n\r\n\r\n    const listItems = items.map(item => {\r\n        return <div className=\"list\" key={item.key}>\r\n            <p>\r\n                <input type=\"text\" id={item.key} value={item.text} onChange={(e) => {\r\n                    updateItemAction({text : e.target.value, key : item.key})\r\n                }}/>\r\n                <span>\r\n       \r\n        <FontAwesomeIcon className=\"faicons\" onClick={() => {\r\n            deleteItemAction(item.key)\r\n        }} icon=\"trash\"/>\r\n        </span>\r\n            </p>\r\n        </div>\r\n    })\r\n    return <div>\r\n        <FlipMove duration={300} easing=\"ease-in-out\">\r\n            {listItems}\r\n        </FlipMove>\r\n\r\n    </div>;\r\n}\r\n\r\nconst mapStateToProps = (state)=>({\r\n    todo : state.todo\r\n})\r\nexport default connect(mapStateToProps , {updateItemAction , deleteItemAction})(ListItems);","import {ADD_NEW_ITEM, DELETE_ITEM, UPDATE_ITEM} from \"../actionType\";\r\n\r\n\r\nexport const handleOnSubmitAction = (data)=> {\r\n    return ({\r\n        type : ADD_NEW_ITEM,\r\n        payload : data\r\n    })\r\n}\r\n\r\nexport const deleteItemAction = (todoKey)=>{\r\n    return {\r\n        type : DELETE_ITEM,\r\n        payload : todoKey\r\n    }\r\n}\r\n\r\nexport const updateItemAction = (todo) =>{\r\n    return {\r\n        type : UPDATE_ITEM,\r\n        payload : todo\r\n    }\r\n}","export const ADD_NEW_ITEM = \"ADD_NEW_ITEM\";\r\nexport const DELETE_ITEM = \"DELETE_ITEM\";\r\nexport const UPDATE_ITEM = 'UPDATE_ITEM';","import {\r\n    ADD_NEW_ITEM, DELETE_ITEM, UPDATE_ITEM\r\n} from '../actionType';\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    items:[],\r\n    currentItem:{\r\n        text:'',\r\n        key:''\r\n    }\r\n}\r\n\r\n\r\nexport default (state = initialState , {payload , type})=>{\r\n    switch (type) {\r\n        case ADD_NEW_ITEM : return {\r\n            ...state,\r\n            items : [...state.items , payload]\r\n        }\r\n        case UPDATE_ITEM : return {\r\n            ...state,\r\n            items : [...state.items.filter(item=>item.key!=payload.key) , payload]\r\n        }\r\n        case DELETE_ITEM : return {\r\n            ...state,\r\n            items: state.items.filter(item=>item.key!=payload)\r\n        }\r\n        default : return initialState;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport todoReducer from \"./todoReducer\";\r\n\r\nexport default combineReducers({\r\n    todo : todoReducer\r\n});","import {createStore} from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst initialState = {};\r\n\r\nexport default createStore(\r\n    rootReducer,\r\n    initialState,\r\n    // window.devToolsExtension && window.devToolsExtension()\r\n);","import React , {useState} from 'react'\r\nimport '../App.css';\r\nimport {connect} from \"react-redux\";\r\nimport {handleOnSubmitAction} from \"../actions/todoAction\";\r\n\r\nconst InputComponent =(props)=>{\r\n    const {todo} = props;\r\n    const {handleOnSubmitAction} = props;\r\n    const [currentItem , setCurrentItem] = useState({\r\n        text : \"\",\r\n        key : \"\"\r\n    })\r\n\r\n    const handleInputChange = (value)=>{\r\n        setCurrentItem({\r\n            key : Date.now(),\r\n            text : value\r\n        })\r\n    }\r\n\r\n    const handleOnClick = async ()=>{\r\n        if(currentItem.text.trim()!=\"\") {\r\n            handleOnSubmitAction(currentItem);\r\n            setCurrentItem({\r\n                text : \"\",\r\n                key : \"\"\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div id=\"to-do-form\">\r\n                <input type=\"text\" placeholder=\"Enter task\" value= {currentItem.text} onChange={(e)=>handleInputChange(e.target.value)}></input>\r\n                <button onClick={handleOnClick} type=\"submit\">Add</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>({\r\n    todo : state.todo\r\n})\r\nexport default connect(mapStateToProps , {handleOnSubmitAction})(InputComponent);","import React from 'react';\r\nimport './App.css';\r\nimport ListItems from './components/ListItems'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\nimport InputComponent from \"./components/InputComponent\";\r\n\r\nlibrary.add(faTrash)\r\n\r\nconst App =()=> {\r\n  return (\r\n      <Provider store={store}>\r\n        <div className=\"App\">\r\n          <header>\r\n              <h2 align=\"center\">Task Manager</h2>\r\n            <InputComponent/>\r\n            <ListItems/>\r\n          </header>\r\n        </div>\r\n      </Provider>\r\n  );\r\n }\r\n\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}